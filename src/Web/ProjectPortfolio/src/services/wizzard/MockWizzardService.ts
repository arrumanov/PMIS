import { reflection } from 'first-di';
import { AWizzardService } from './AWizzardService';

const mock = `<Response ResponseType="4"><Result><ResultCode>3</ResultCode></Result><Form FormID="8aaa8090718612d5017186b16d320000" height="0" width="0"><ProposalID>8aaa808175fb1b430175ff04460400b3</ProposalID><Title>Калькулятор факторинга</Title><FieldGroups><FieldGroup ID="1" Label="Данные для расчета" Width="100" IsCollapsible="0" IsCollapsed="0"><Text></Text></FieldGroup><FieldGroup ID="2" Label="Результаты расчета" Width="100" IsCollapsible="0" IsCollapsed="0"><Text></Text></FieldGroup></FieldGroups><Fields><Field FieldCode="fieldSum" Label="Стоимость расчета" Position="1" FieldLength="50" FieldMaxLength="100" FieldType="0" DataType="1" Required="0" InitRecalc="1" ReadOnly="0" Enabled="1" DefaultValue="100" SplitterAfter="0" FieldGroupID="1" LineBreak="0" FileSize="0" RowsPerPage="0"><Value><![CDATA[100]]></Value><Key></Key></Field><Field FieldCode="fieldPeriod" Label="Срок оплаты счета" Position="2" FieldLength="50" FieldMaxLength="100" FieldType="0" DataType="1" Required="0" InitRecalc="1" ReadOnly="0" Enabled="1" DefaultValue="60" SplitterAfter="0" FieldGroupID="1" LineBreak="0" FileSize="0" RowsPerPage="0"><Value><![CDATA[60]]></Value><Key></Key></Field><Field FieldCode="fieldResult1" Label="Получаете сразу" Position="1" FieldLength="33" FieldMaxLength="100" FieldType="0" DataType="2" Required="0" InitRecalc="0" ReadOnly="0" Enabled="1" SplitterAfter="0" FieldGroupID="2" LineBreak="0" FileSize="0" RowsPerPage="0"><Value><![CDATA[83]]></Value><Key></Key></Field><Field FieldCode="fieldResult2" Label="Получите после того как оплатит клиент" Position="2" FieldLength="33" FieldMaxLength="100" FieldType="0" DataType="2" Required="0" InitRecalc="0" ReadOnly="0" Enabled="1" SplitterAfter="0" FieldGroupID="2" LineBreak="0" FileSize="0" RowsPerPage="0"><Value><![CDATA[7.47]]></Value><Key></Key></Field><Field FieldCode="FieldResult3" Label="Стоимость финансирования" Position="3" FieldLength="33" FieldMaxLength="100" FieldType="0" DataType="2" Required="0" InitRecalc="0" ReadOnly="0" Enabled="1" SplitterAfter="0" FieldGroupID="2" LineBreak="0" FileSize="0" RowsPerPage="0"><Value><![CDATA[2]]></Value><Key></Key></Field></Fields></Form></Response>`;

@reflection
export class MockWizzardService extends AWizzardService {
  getForm(data: string): Promise<string> {
    return Promise.resolve(mock);
  }
}
